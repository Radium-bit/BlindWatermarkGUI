## 【注意】 此文件会覆盖DEV.ENV的同名内容，敬请留意

#构建时输出文件名是否包括 Git Hash 
INCLUDE_GIT_HASH=false
# 程序构建版本号
BUILD_VERSION=' Unknow'
# 是否启用控制台调试
ENABLE_CONSOLE_DEBUG=false
# 是否启用优化模式
ENABLE_OPTIMIZE=true
# 是否启用压缩
ENABLE_COMPRESS=true
# 压缩格式
COMPRESS_FORMAT='lzma' # 可以是lzma(LZMA2)/zip/none（不压缩）
# 压缩等级
COMPRESS_LEVEL=6 # 0-9，越高压缩率越高，但压缩时间也越长，如果上面为none忽略本条
# 单文件打包模式
ONE_FILE_MODE=true # 为true时，打包成单文件exe，否则为onedir模式

# 去重列表
REQUIRED_IMPORTS = [
    'qreader',
    'qrcode',
    'ultralytics',
    'torch._numpy',
    'torch._numpy._ufuncs',
    'torch._numpy._ndarray',
    'torch._numpy._dtypes',
    'torch._numpy._funcs',
    'torch._numpy._util',
    'torchvision.ops',
    'torchvision.models',
    'torchvision.transforms',
    'torchvision.io',
    'torch._dynamo',
    'torch.fx',
    'scipy._lib.array_api_compat.common._fft',
    'scipy._lib.array_api_compat.common',
    'scipy._lib.array_api_compat.numpy.fft',
    'quadrilateral_fitter',
    'quadrilateral_fitter.quadrilateral_fitter',
    # 添加 watermark 模块
    'watermark',
    'watermark.embed',
    'watermark.extract',
]

# 排除列表
EXCLUDE_IMPORTS = [

]

# 搜集的数据
DATAS=[
    # qr模型
    DEV_ENV.SITE_PACKAGE_PATH+'qrdet/.model'=>'qrdet/.model', # 表示从同目录DEV.ENV中读取SITE_PACKAGE_PATH并拼接到'qrdet/.model'，然后打包进入'qrdet/.model'
    # 构建环境
    'APP.ENV'=>'.',
    # 包含修复文件
    'hooks/torch_fixes.py'=>'.',
    'hooks/torch_numpy_fix.py'=>'.',
    DEV_ENV.SITE_PACKAGE_PATH+'scipy/_lib/array_api_compat/numpy'=>'scipy/_lib/array_api_compat/numpy',
    'hidden_imports.json'=>'.',
    COLLECT('ultralytics'), #这里就和main.spec的*collect_data_files('ultralytics')逻辑相同
    ## 拆分后的模块
    # watermark 模块
    'watermark'=>'watermark',
]

# Hooks
HOOKS=[
    'hooks' #代表当前工程目录的hooks文件夹
]

# Runtime Hooks
RUNTIME_HOOKS=[
    'hooks/torch_numpy_fix.py'
]
